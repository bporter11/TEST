import os
import json
import label_studio_sdk
from label_studio_ml.model import LabelStudioMLBase

LABEL_STUDIO_HOST = os.getenv('LABEL_STUDIO_HOST', 'http://localhost:8080')
LABEL_STUDIO_API_KEY = os.getenv('LABEL_STUDIO_API_KEY', 'your-label-studio-api-key')


class MyModel(LabelStudioMLBase):
    def predict(self, tasks, **kwargs):
        output_predictions = []

        for task in tasks:
            # Assuming there's an 'image_url' field in your Label Studio task data
            image_url = task.get('data', {}).get('image_url')

            if image_url:
                # Use your image classification function to get the predicted label
                predicted_label = classify_image(image_url)

                # Create a Label Studio-compatible output format
                output = {
                    'result': {
                        'predictions': [{'label': predicted_label}],
                    },
                    'score': 1.0,  # You can adjust this score as needed
                }
            else:
                # Handle cases where no image URL is provided
                output = {
                    'result': {
                        'predictions': [],
                    },
                    'score': 0.0,
                }

            output_predictions.append(output)

        return output_predictions
